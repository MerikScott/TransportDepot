package App;

import Environment.Place;
import Infrastructure.Employees.VehicleDriver;
import Infrastructure.TransmitterGSM;
import Infrastructure.Vehicles.Vehicle;
import Tools.DriversFactory;
import Tools.PlacesFactory;
import Tools.TransmittersFactory;
import Tools.VehiclesFactory;

import java.util.ArrayList;
import java.util.List;

public class Main {

    private List<Vehicle> vehiclesList;

    public static void main(String[] args) {

        Integer vehiclesNumber;
        Integer vehiclesAvailable = 0;
        Integer driversNumber = 0;
        Integer transmittersNumber = 0;
        Integer nextTransmitter = 0;
        Integer placesNumber = 0;

        // generate list of vehicles available in depot
        List<Vehicle> vehiclesList = VehiclesFactory.getVehicles();
        for (Vehicle vehicle : vehiclesList) {
            System.out.println(vehicle.toString());
        }
        vehiclesNumber = vehiclesList.size();
        vehiclesAvailable = vehiclesNumber;

        // generate list of available drivers
        List<VehicleDriver> driversList = DriversFactory.getDrivers();
        for (VehicleDriver vehicleDriver : driversList) {
            System.out.println(vehicleDriver.toString());
        }
        driversNumber = driversList.size();

        // generate list of GSM transmitters
        List<TransmitterGSM> transmittersList = TransmittersFactory.getTransmitters();
        for (TransmitterGSM transmitterGSM : transmittersList) {
            System.out.println(transmitterGSM.toString());
        }
        transmittersNumber = transmittersList.size();

        // available places list - in real life it should be generated by transmitter or from destinations map
        List<Place> placesList = PlacesFactory.getPlaces();
        for (Place place : placesList) {
            System.out.println(place.toString());
        }
        placesNumber = placesList.size();

        System.out.println("Vehicles number= " + vehiclesNumber);
        System.out.println("Drivers number= " + driversNumber);
        System.out.println("Transmitters number= " + transmittersNumber);
        System.out.println("Places number= " + placesNumber);


//        // just chcecking and displaying the place
//        Place place;
//        place = placesList.get(0);
//        System.out.println("Place number zero: ");
//        System.out.println(place.getLatitude());
//        System.out.println(place.getLongitude());
//
//        // just checking and setting transmitter00
//        System.out.println("First transmitter set");
//        TransmitterGSM transmitter00 = new TransmitterGSM(0,0,0);
//        transmitter00.setLatitude(place.getLatitude());
//        transmitter00.setLongitude(place.getLongitude());
//
//        System.out.println("First transmitter position: latitude " +
//                transmitter00.getLatitude() + ", longitude: " +
//                transmitter00.getLongitude());
//
//        System.out.println("_ - - - - - _ - - - - - _ - - - - - ");

//        // get all details from first element of available vehicles list
//        System.out.println(vehiclesList.get(0));
//        // get registration from first element of available vehicles list
//        System.out.println(vehiclesList.get(0).getRegistrationPlate());
//
//        // start to use vehicles, bind with drivers and transmitters
//        // vehicles in use should be removed from list of vehicles available in the depot
//        List<Vehicle> vehiclesInUseList = new ArrayList<>();
//        vehiclesInUseList.add(vehiclesList.get(0));
//        vehiclesList.remove(0);
//
//        vehiclesInUseList.get(0).setDriver(driversList.get(0));
//        System.out.println("Set driver 0 to vehicleList 0");
//        System.out.println(vehiclesInUseList.get(0));
//        vehiclesInUseList.get(0).setTransmitter(transmitter00);
//
//        Vehicle startVehicle = vehiclesList.get(0);
//        startVehicle.setDriver(driversList.get(0));
//        System.out.println(startVehicle.getDriver().getSurname());


        // sending vehicle by binding with driver and transmitter & setting new coordinates
        Integer vehicleToSend = 2;
        Integer driverToSend = 3;

        System.out.println(vehiclesList.get(vehicleToSend).getAvailable());
        System.out.println(vehicleToSend);
        System.out.println(vehiclesNumber);

        if ((vehicleToSend > vehiclesNumber) || (vehiclesList.get(vehicleToSend).getAvailable() == false)) {
            System.out.println("Upps... something went wrong, there is no such vehicle available");
        } else {
            vehiclesList.get(vehicleToSend).setAvailable(false); // not available any more
            vehiclesList.get(vehicleToSend).setDriver(driversList.get(driverToSend)); // driver binded
            driversList.get(driverToSend).setAvailable(false); // not available any more
            vehiclesList.get(vehicleToSend).setTransmitter(transmittersList.get(nextTransmitter));
            transmittersList.get(nextTransmitter).setLatitude(placesList.get(0).getLatitude());
            transmittersList.get(nextTransmitter).setLongitude(placesList.get(0).getLongitude());
            nextTransmitter++;
            //System.out.println(vehiclesList.get(vehicleToSend).toString());

        }

        for (Vehicle vehicle : vehiclesList) {
            System.out.println(vehicle.toString());
        }


        //System.out.println(vehiclesList.get(vehicleToSend).getDriver()); // driver binded


        //System.out.println("we are here");


//        vehiclesInUseList.get(0).setDriver(driversList.get(0));
//        System.out.println("Set driver 0 to vehicleList 0");
//        System.out.println(vehiclesInUseList.get(0));
//        vehiclesInUseList.get(0).setTransmitter(transmitter00);
//
//        Vehicle startVehicle = vehiclesList.get(0);
//        startVehicle.setDriver(driversList.get(0));
//        System.out.println(startVehicle.getDriver().getSurname());

        String nameToCheck = "Martines";


//        System.out.println(vehiclesInUseList.size());
//        System.out.println(vehiclesInUseList.get(0).getDriver().getSurname());


        System.out.println(vehiclesList.get(0).getDriver().getSurname());

        SystemOperator.findVehicle(vehiclesList, nameToCheck);








        //vehiclesInUseList.add;



    }


}

