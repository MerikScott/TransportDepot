package App;

import Environment.Place;
import Infrastructure.Employees.VehicleDriver;
import Infrastructure.TransmitterGSM;
import Infrastructure.Vehicles.Vehicle;
import Tools.DriversFactory;
import Tools.PlacesFactory;
import Tools.TransmittersFactory;
import Tools.VehiclesFactory;

import java.util.ArrayList;
import java.util.List;

public class Main {

    private List<Vehicle> vehiclesList;

    public static void main(String[] args) {

        Integer driversNumber = 0;
        Integer transmittersNumber = 0;
        Integer nextTransmitter = 0;
        Integer placesNumber = 0;
        Integer vehiclesInDepot = 0;

        System.out.println("Operating system of our transportation depot is rebooting...");

        // generate list of vehicles available in depot
        List<Vehicle> vehiclesList = VehiclesFactory.getVehicles();
        System.out.println("Vehicles database is ready...");
        vehiclesInDepot = vehiclesList.size();

        // generate list of available drivers
        List<VehicleDriver> driversList = DriversFactory.getDrivers();
        System.out.println("Drivers database is ready...");

        // generate list of GSM transmitters
        List<TransmitterGSM> transmittersList = TransmittersFactory.getTransmitters();
        System.out.println("Transmitters database is ready...");

        // available places list - in real life it should be generated by transmitter or from destinations map
        List<Place> placesList = PlacesFactory.getPlaces();
        System.out.println("Database with places to go is ready...");

        // display info
        System.out.println("-----------------------------------------------");
        System.out.println("We have in total " + vehiclesList.size() + " vehicles in our depot");
        System.out.println("There are " + SystemOperator.depotVehicles(vehiclesList) + " vehicles available in depot.");
        System.out.println("We have in total " + driversList.size() + " drivers ready to go.");
        System.out.println("There are " + transmittersList.size() + " transmitters.");
        System.out.println("_______________________________________________");
        System.out.println("");


        // sending vehicle by binding with driver and transmitter & setting new coordinates
        System.out.println("Sending vehicle with driver and transmitter");
        Integer vehicleToSend = 2;
        Integer driverToSend = 3;
        System.out.println("Checking if vehicle is available to send... status is: " + vehiclesList.get(vehicleToSend).getAvailable());
        if ((vehicleToSend > vehiclesInDepot) || (vehiclesList.get(vehicleToSend).getAvailable() == false)) {
            System.out.println("Upps... something went wrong, there is no such vehicle available");
        } else {
            SystemOperator.sendVehicle(vehiclesList, vehicleToSend, driversList, driverToSend, transmittersList, nextTransmitter, placesList );
        }

        System.out.println("-----------------------------------------------");
        System.out.println("Find vehicle by drivers name");
        String nameToCheck = "Martines";
        System.out.println(vehiclesList.get(0).getDriver().getSurname());
        SystemOperator.findVehicle(vehiclesList, nameToCheck);

        String registrationPlate = "KR002";
        System.out.println("Removing vehicle with registration " + registrationPlate);
        SystemOperator.removeVehicle(vehiclesList, registrationPlate);


        System.out.println("There are " + SystemOperator.depotVehicles(vehiclesList) + " vehicles available in depot.");





        //vehiclesInUseList.add;



    }




}

